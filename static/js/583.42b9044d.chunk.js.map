{"version":3,"file":"static/js/583.42b9044d.chunk.js","mappings":"sPAGaA,EAAYC,EAAAA,QAAAA,GAAH,iEAKTC,GAAaD,EAAAA,EAAAA,SAAOE,EAAAA,GAAPF,CAAH,gD,SCNVG,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACnC,OACEA,IACE,SAACN,EAAD,WACE,SAACE,EAAD,CAAYK,GAAE,iBAAYF,GAA1B,SAAsCC,KAI7C,ECRYE,EAAOP,EAAAA,QAAAA,GAAH,kEAKJQ,EAAQR,EAAAA,QAAAA,GAAH,2CCFLS,EAAa,WACxB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAcQ,EAAIC,SAClBL,EAAU,WACX,IACAM,OAAM,SAAAT,GACLC,EAASD,GACTG,EAAU,WACX,GACJ,GAAE,IAEY,aAAXD,GACK,SAACP,EAAD,UAAQK,EAAMU,UAGR,aAAXR,GAEA,SAACR,EAAD,UACGI,EAAWa,KAAI,gBAAGC,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,MAAP,OACd,SAACF,EAAD,CAAoBE,MAAOA,EAAOD,QAASqB,GAA3BA,EADF,WAHtB,CASD,ECjCYC,EAAQ1B,EAAAA,QAAAA,GAAH,8CCUlB,EATa,WACX,OACE,6BACE,SAAC0B,EAAD,8BACA,SAACjB,EAAD,MAGL,C,sGCVD,IAAMkB,EACK,mCADLA,EAEC,+BAFDA,EAGS,WAGR,SAAST,IACd,OAAOU,MAAM,GAAD,OACPD,EADO,YACKA,EADL,4BACyCA,IACnDR,MAAK,SAAAU,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIzB,MAAJ,uDAEH,GACF,CAEM,SAAS0B,EAAgB9B,GAA8B,IAArB+B,EAAoB,uDAAJ,GACvD,OAAOP,MAAM,GAAD,OACPD,EADO,kBACWvB,GADX,OACqB+B,EADrB,oBAC8CR,EAD9C,oBAEVR,MAAK,SAAAU,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIzB,MAAJ,uDAEH,GACF,CAEM,SAAS4B,EAAiBC,GAC/B,OAAOT,MAAM,GAAD,OACPD,EADO,iCAC0BA,EAD1B,kBACgDU,EADhD,+CAEVlB,MAAK,SAAAU,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIzB,MAAJ,uDAEH,GACF,C","sources":["components/MoviesList/MovieItem/MovieItem.styled.js","components/MoviesList/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","requests/getApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieName = styled.li`\n  padding: 8px;\n  margin-bottom: 12px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: inherit;\n  }\n`;\n","import { MovieName, StyledLink } from './MovieItem.styled';\n\nexport const MovieItem = ({ movieId, title }) => {\n  return (\n    title && (\n      <MovieName>\n        <StyledLink to={`movies/${movieId}`}>{title}</StyledLink>\n      </MovieName>\n    )\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: 24px;\n  padding: 0 24px;\n`;\n\nexport const Error = styled.h2`\n  color: #ef5350;\n`;\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'requests/getApi';\nimport { MovieItem } from './MovieItem';\nimport { List, Error } from './MoviesList.styled';\n\nexport const MoviesList = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(res => {\n        setMoviesList(res.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, []);\n\n  if (status === 'rejected') {\n    return <Error>{error.message}</Error>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <List>\n        {moviesList.map(({ id, title }) => (\n          <MovieItem key={id} title={title} movieId={id} />\n        ))}\n      </List>\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-left: 24px;\n`;\n","import { MoviesList } from 'components/MoviesList';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  return (\n    <main>\n      <Title>Trending today</Title>\n      <MoviesList />\n    </main>\n  );\n};\n\nexport default Home;\n","const data = {\n  API_KEY: '068c5b7ddc8b61cb20780a285eccefd7',\n  URL: 'https://api.themoviedb.org/3',\n  trendingUrl: 'trending',\n};\n\nexport function getTrendingMovies() {\n  return fetch(\n    `${data.URL}/${data.trendingUrl}/all/day?api_key=${data.API_KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`The page you were trying to reach couldn't be found`)\n    );\n  });\n}\n\nexport function getMovieDetails(movieId, searchDetails = '') {\n  return fetch(\n    `${data.URL}/movie/${movieId}${searchDetails}?api_key=${data.API_KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`The page you were trying to reach couldn't be found`)\n    );\n  });\n}\n\nexport function getMoviesByQuery(query) {\n  return fetch(\n    `${data.URL}/search/movie?api_key=${data.API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`The page you were trying to reach couldn't be found`)\n    );\n  });\n}\n"],"names":["MovieName","styled","StyledLink","Link","MovieItem","movieId","title","to","List","Error","MoviesList","useState","moviesList","setMoviesList","error","setError","status","setStatus","useEffect","getTrendingMovies","then","res","results","catch","message","map","id","Title","data","fetch","response","ok","json","Promise","reject","getMovieDetails","searchDetails","getMoviesByQuery","query"],"sourceRoot":""}